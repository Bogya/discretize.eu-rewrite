---
import { Item } from "@gw2-ui/components";
import { TOC } from "astro-toc";
import imageFetch from "src/utils/imageFetch";
import Card from "../Card.astro";
import Attribute from "../gw2-ui/Attribute.astro";
import TextDivider from "../TextDivider.astro";
import Header from "./Header.astro";

export interface Props {
  title: string;
  cycle: string;
  sigils: { id: number }[];
  potions: { id: number }[];
  description: string;
  date: string;
  difficulties: { level: number; ar: number }[];
  image: string;
  long_description: string;
  headings: {
    depth: number;
    slug: string;
    text: string;
  }[];
}

const {
  title,
  cycle,
  sigils,
  potions,
  description,
  date,
  difficulties,
  image,
  long_description,
  headings,
} = Astro.props;

// const images = Object.keys(
//   import.meta.glob(`../../../discretize-guides/fractals/*/images/header.jpg`, {
//     import: "default",
//   })
// );
// const headerImage = await imageFetch(images, Astro.url.pathname);

const images = import.meta.glob(
  `../../../discretize-guides/fractals/*/images/header.jpg`,
  { import: "default" }
);
let headerImage;
for (const image of Object.keys(images)) {
  if (image.includes(Astro.url.pathname)) {
    headerImage = image;
    break;
  }
}
if (!headerImage) {
  throw new Error(
    "No header image found for this fractal " +
      title +
      " " +
      Astro.url.pathname +
      " " +
      JSON.stringify(images)
  );
}
---

<Header
  title={difficulties.map((d) => d.level).join(", ") + " " + title}
  description={description}
  date={date}
  image={headerImage}
/>

<p class="mb-1">
  {long_description}
</p>

<TextDivider text="Details" />

<section class="details mb-1">
  <div class="grid">
    <div class="l6 m6 s12">
      <table>
        <tbody>
          <tr>
            <th>Difficulties</th>
            <td
              >{
                difficulties.map((d) => (
                  <>
                    Level {d.level} -{" "}
                    <Attribute
                      name="Agony Resistance"
                      text={d.ar + " Agony Resistance"}
                    />
                    <br />
                  </>
                ))
              }</td
            >
          </tr>
          <tr>
            <th>Cycle</th>
            <td>{cycle}</td>
          </tr>

          {
            potions ? (
              <tr>
                <th>Potions</th>
                <td>
                  <ul>
                    {potions.map((p) => (
                      <li>
                        <Item client:visible id={p.id} />
                      </li>
                    ))}
                  </ul>
                </td>
              </tr>
            ) : null
          }

          {
            sigils ? (
              <tr>
                <th>Sigils</th>
                <td>
                  <ul>
                    {sigils.map((s) => (
                      <li>
                        <Item client:visible id={s.id} />
                      </li>
                    ))}
                  </ul>
                </td>
              </tr>
            ) : null
          }
        </tbody>
      </table>
    </div>
    <div class="l6 m6 s12 toc">
      <Card title="Table of contents">
        <TOC
          toc={headings.map((heading) => ({
            title: heading.text,
            url: "#" + heading.slug,
            depth: heading.depth - 1,
          }))}
          maxDepth={2}
          as="number"
        />
      </Card>
    </div>
  </div>
</section>

<TextDivider text="Guide" />

<style>
  .details ul {
    list-style: none;
    padding: 0 !important;
    margin: 0 !important;
  }
  .details ul > li {
    margin-top: 0 !important;
  }
  .details ul > :not(:last-child) {
    margin-bottom: 0.1rem;
  }
  .details li span {
    margin-left: 0.5rem;
  }
  .additionalPadding {
    padding: 8px !important;
  }

  .mb-1 {
    margin-bottom: 1rem;
  }
  .details th {
    font-weight: 600;
  }

  .details tr > td,
  .details tr > th {
    border-bottom: 1px solid var(--rdc-color-border);
    padding: 1rem;
  }

  .details tbody :last-child > td,
  .details tbody :last-child > th {
    border-bottom: none;
  }

  .toc {
    display: flex;
    flex-direction: row-reverse;
  }

  @media (max-width: 600px) {
    .toc {
      display: block;
    }
  }
</style>
