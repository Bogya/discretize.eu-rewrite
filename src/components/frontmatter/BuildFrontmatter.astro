---
import Profession from "../gw2-ui/Profession.astro";
import TextDivider from "../TextDivider.astro";
import Label from "../Label.astro";
import { Icon } from "astro-icon";
import { EliteSpecTypes, ProfessionTypes } from "@gw2-ui/data/professions";
import GifPlayer from "../GifPlayer.astro";
import Table from "../html-components/table.astro";
import Tbody from "../html-components/tbody.astro";
import Tr from "../html-components/tr.astro";
import Th from "../html-components/th.astro";
import Td from "../html-components/td.astro";
import Boon from "../gw2-ui/Boon.astro";
import Condition from "../gw2-ui/Condition.astro";
import { condition } from "discretize-ui/globals/src/styles/professionThemes";
import { BACKGROUND } from "src/styles";

export interface Props {
  title: string;
  specialization: EliteSpecTypes;
  role: string;
  hasBeginner: boolean;
  date: string;
  hidden?: boolean;
  rating: string;
  profession: ProfessionTypes;
  boons: {
    name: string;
    uptime: string;
    variant: string;
  }[];
  conditions: {
    name: string;
    uptime: string;
  }[];
  code: string;
  cmGuide?: string;
  uptodate?: {
    guide?: boolean;
    gear?: boolean;
  };
}

const {
  title,
  specialization,
  role,
  hasBeginner,
  date,
  boons,
  cmGuide,
  conditions,
  uptodate: { guide = true, gear = true } = {},
} = Astro.props;
---

<script>
  // get nanostore
  import { isBeginner } from "../../state/beginner";

  const switchElement = document.querySelector<HTMLInputElement>(
    "[id='switchBeginner']"
  );
  if (switchElement) {
    switchElement.addEventListener("change", (e: InputEvent) => {
      isBeginner.set(!e.target.checked);
    });
  }
</script>

<div
  class="relative h-full mx-[-1.4rem] mt-[-1.393rem] mb-4 max-sm:hidden max-[1439px]:mt-[-1rem] max-[1439px]:mx-[-1rem]"
>
  <GifPlayer url="/firebrand_cool.webm" autoplay />

  <div
    class="transform translate-y-[-50%] absolute top-1/2 left-0 max-w-full h-[120px] flex justify-between flex-col items-start p-4 bg-blue-500"
  >
    <div class="flex flex-grow text-black">
      <Profession disableLink disableText name={specialization} size="big" />
      <div class="ml-4 self-center">
        <h1 class="mb-2">{title}</h1>
        <p>{role}</p>
      </div>
    </div>
  </div>

  <div
    class={`flex gap-4 absolute bottom-0 right-0 px-4 pt-4 rounded-tl-md ${BACKGROUND}`}
  >
    {
      boons && (
        <Table noMargin>
          <Tbody>
            <Tr>
              <Th>Boons</Th>
              <Td>
                {boons.map(({ name }) => (
                  <>
                    <Boon name={name} />
                    <br />
                  </>
                ))}
              </Td>
            </Tr>
          </Tbody>
        </Table>
      )
    }
    {
      conditions && (
        <Table noMargin>
          <Tbody>
            <Tr>
              <Th>Conditions</Th>
              <Td>
                {conditions.map(({ name }) => (
                  <>
                    <Condition name={name} />
                    <br />
                  </>
                ))}
              </Td>
            </Tr>
          </Tbody>
        </Table>
      )
    }
  </div>

  <div class="absolute top-0 right-0 p-1 text-sm bg-blue-500 text-black">
    <ul>
      <li class="flex gap-1 items-center">
        <Icon name="mdi:calendar" height="0.8rem" /> last updated on {
          new Date(date).toDateString()
        }
      </li>
      <li class="flex gap-1 items-center">
        <Icon name="mdi:account" height="0.8rem" /> Gear: {!gear ? "not" : ""} up-to-date
      </li>
      <li class="flex gap-1 items-center">
        <Icon name="mdi:account" height="0.8rem" /> Guide: {!guide ? "not" : ""}
        up-to-date
      </li>
    </ul>
  </div>
</div>

<div class="flex items-center gap-4 mb-4">
  {
    cmGuide && (
      <button class="btn btn-primary ">
        <a href={cmGuide} target="_blank" rel="noopener noreferrer">
          CM Guide
        </a>
      </button>
    )
  }

  {
    hasBeginner && (
      <div class="form-control">
        <label class="label cursor-pointer">
          <span class="label-text mr-4">Advanced mode</span>
          <input
            id="switchBeginner"
            type="checkbox"
            class="checkbox"
            aria-label="Switch between Beginner and Advanced"
          />
        </label>
      </div>
    )
  }
</div>
<TextDivider text="Overview" />
