---
import discord from "../icons/discord.svg";
import Discretize from "../icons/discretize.astro";
import NavBuilds from "./NavBuilds.astro";
import NavDropdown from "./NavDropdown.astro";

async function getBuilds() {
  // load markdown files and return the frontmatter
  const builds = await Astro.glob("../../discretize-guides/builds/**/*.mdx");

  const navigationData = builds.map((build) => ({
    title: build.frontmatter.title,
    rating: build.frontmatter.rating,
    profession: build.frontmatter.profession,
    specialization: build.frontmatter.specialization,
    url: build.url.replace("discretize-guides", "").replace("/index.mdx", ""),
  }));

  const data = {};
  navigationData.forEach((build) => {
    if (!data[build.profession]) {
      data[build.profession] = [];
    }
    data[build.profession].push(build);
  });

  return data;
}

async function getGuides() {
  // load markdown files and return the frontmatter
  const guides = await Astro.glob("../../discretize-guides/guides/**/*.mdx");

  const navigationData = guides.map((guide) => ({
    title: guide.frontmatter.title,
    url: guide.url.replace("discretize-guides", "").replace("/index.mdx", ""),
  }));

  return navigationData;
}

const builds = await getBuilds();
const guides = await getGuides();
---

<script>
  const darkModeButton = document.querySelector<HTMLInputElement>(
    "#darkmodeSwitch input"
  );

  const currentTheme = localStorage.getItem("theme");
  if (currentTheme === "light") {
    document.body.classList.remove("dark");
    document.body.classList.add("light");

    darkModeButton.checked = true;
  }
  darkModeButton.addEventListener("click", () => {
    if (document.body.classList.contains("dark")) {
      document.body.classList.remove("dark");
      document.body.classList.add("light");
      localStorage.setItem("theme", "light");
    } else {
      document.body.classList.remove("light");
      document.body.classList.add("dark");
      localStorage.setItem("theme", "dark");
    }
  });
</script>

<div class="topArea row">
  <a href="/"><Discretize className="discretizeLogo" /></a>
  <div class="max"></div>

  <label class="switch" id="darkmodeSwitch">
    <input type="checkbox" />
    <span>
      <i>light_mode</i>
    </span>
  </label>
</div>

<nav class="nav">
  <div class="buttonArea row">
    <NavBuilds builds={builds} />

    <NavDropdown title="Guides" content={guides} slug="/guides" />

    <a class="chip">Fractals</a>

    <a class="chip">Augmentation Calculator</a>
    <div class="max"></div>

    <button class="border circle">
      <img class="discordIcon" src={discord.src} alt="discord" />
    </button>
  </div>
</nav>

<style>
  .nav {
    position: sticky;
    margin-top: 0 !important;
    top: 0px;

    background-color: #2a2c31;
    z-index: 10;
  }
  .topArea {
    background-color: #2f3136;
    max-height: 4rem;
    padding: 0.3rem;
    padding: 2rem 2rem;
  }
  .buttonArea {
    border: 5px solid var(--primary);
    border-left: 0px;
    border-right: 0px;
    border-bottom: 0px;
    padding-left: 2rem;
    padding-right: 2rem;
    padding-top: 0.7rem;
    padding-bottom: 0.7rem;
    width: 100%;
  }

  .discordIcon {
    width: 2rem;
    height: 2rem;
  }
  .discretizeLogo {
    height: 3rem;
  }
</style>
