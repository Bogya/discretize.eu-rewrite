---
import Discretize from "../../icons/discretize.astro";
import NavBuilds from "./NavBuilds.astro";
import NavDropdown from "./NavDropdown.astro";
import DarkModeSwitch from "./DarkModeSwitch.astro";
import type { EliteSpecTypes, ProfessionTypes } from "@gw2-ui/data/professions";
import Discord from "../../icons/discord.astro";
import { Icon } from "astro-icon";
import Link from "../Link.astro";

async function getBuilds() {
  // load markdown files and return the frontmatter
  const builds = await Astro.glob("../../../discretize-guides/builds/**/*.mdx");

  const navigationData = builds
    .filter((build) => build.frontmatter.archive !== true)
    .map((build) => ({
      title: build.frontmatter.title,
      rating: build.frontmatter.rating,
      profession: build.frontmatter.profession as ProfessionTypes,
      specialization: build.frontmatter.specialization as EliteSpecTypes,
      url: build.url.replace("discretize-guides", "").replace("/index.mdx", ""),
    }));

  const data = {};
  navigationData.forEach((build) => {
    if (!data[build.profession]) {
      data[build.profession] = [];
    }
    data[build.profession].push(build);
  });

  return data;
}

async function getGuides() {
  // load markdown files and return the frontmatter
  const guides = await Astro.glob("../../../discretize-guides/guides/**/*.mdx");

  const navigationData = guides.map((guide) => ({
    title: guide.frontmatter.title,
    url: guide.url.replace("discretize-guides", "").replace("/index.mdx", ""),
  }));

  return navigationData;
}

const builds = await getBuilds();
const guides = await getGuides();
---

<div class="topArea">
  <div class="topButtonArea row">
    <Link href="/" label="Home"><Discretize className="discretizeLogo" /></Link>
    <div class="max"></div>

    <div class="l">
      <DarkModeSwitch />
    </div>

    <div class="s m">
      <button
        data-ui="#modal"
        class="transparent circle large"
        aria-label="Menu"
        ><i><Icon name="mdi:menu" /></i>
      </button>

      <div class="modal left" id="modal">
        <Link href="/" label="Home">
          <Discretize className="discretizeLogo" />
        </Link>

        <nav class="navMobile">
          <div>
            <Link className="row wave" disablePrefetch href="/builds">
              Builds
            </Link>
            <Link className="row wave" disablePrefetch href="/guides">
              Guides
            </Link>
            <Link className="row wave" disablePrefetch href="/fractals">
              Fractals
            </Link>
            <Link
              className="row wave"
              disablePrefetch
              href="/augmentation-calculator"
            >
              Augmentation Calculator
            </Link>
          </div>
        </nav>

        <div class="mobileDarkMode">
          <DarkModeSwitch />
        </div>
      </div>
    </div>
  </div>
</div>
<nav class="nav l">
  <div class="lowerArea">
    <div class="buttonArea row">
      <NavBuilds builds={builds} />
      <NavDropdown title="Guides" content={guides} slug="/guides" />
      <Link className="discretizeNavButton" disablePrefetch href="/fractals">
        Fractals
      </Link>
      <Link
        className="discretizeNavButton"
        disablePrefetch
        href="/augmentation-calculator"
      >
        Augmentation Calculator
      </Link>
      <div class="max"></div>

      <Link href="https://discord.gg/TGrhn8qjYT" label="Discord Link">
        <button class="border circle" aria-label="Discord Link">
          <Discord className="discordIcon" />
        </button>
      </Link>
    </div>
  </div>
</nav>

<style>
  .nav {
    position: sticky;
    margin-top: 0 !important;
    top: 0px;

    background-color: var(--surface);
    z-index: 10;
    box-shadow: 0 1px 2px 0 rgb(0 0 0 / 15%);
  }
  :global(.discretizeNavButton) {
    font-weight: 500;
    font-size: 1.3rem;
    font-family: Muli;
  }
  .navMobile {
    margin-bottom: 2rem;
  }
  .mobileDarkMode {
    display: flex;
  }
  .topArea {
    background-color: var(--surface-variant);
  }
  .topButtonArea {
    max-height: 4rem;
    padding: 2rem 0rem;
    max-width: 1400px;
    margin: 0 auto;
  }
  @media (max-width: 1400px) {
    .topButtonArea {
      padding: 2rem 1rem;
    }
  }
  .buttonArea {
    width: 100%;
    gap: 2.2rem;
    max-width: 1400px;
    margin: 0 auto;
  }
  .lowerArea {
    border: 5px solid var(--primary);
    border-left: 0px;
    border-right: 0px;
    border-bottom: 0px;
    padding-left: 1rem;
    padding-right: 1rem;
    padding-top: 0.7rem;
    padding-bottom: 0.7rem;
    width: 100%;
  }

  .discordIcon {
    width: 2rem;
    height: 2rem;
  }
  .discretizeLogo {
    height: 3rem;
  }
</style>
