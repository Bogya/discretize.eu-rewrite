---
import FractalFrontmatter from "src/components/frontmatter/FractalFrontmatter.astro";
import Layout, { SEOProps } from "./Layout.astro";
import type { Props as FractalProps } from "src/components/frontmatter/FractalFrontmatter.astro";
import { getImage } from "@astrojs/image";
import imageFetch from "src/utils/imageFetch";
import { fractalHeaders } from "src/utils/cache";

export interface Props {
  frontmatter: FractalProps;
  headings: {
    depth: number;
    slug: string;
    image: string;
    text: string;
  }[];
  url: string;
}
const { title, image } = Astro.props.frontmatter;

const headerImage = imageFetch(Object.keys(fractalHeaders), Astro.url.pathname);

let seo: SEOProps = { title };

if (headerImage) {
  const thumbnail = (await Object.entries(fractalHeaders).find(
    ([k, v]) => k === headerImage
  )[1]()) as ImageMetadata;

  const ogImage = await getImage({
    src: thumbnail.src,
    height: 512,
    width: 512,
    format: "jpeg",
    alt: "OG Image",
  });

  seo = {
    title,
    description: Astro.props.frontmatter.long_description || undefined,
    image: import.meta.env.CF_PAGES_URL + ogImage?.src,
  };
}
---

<Layout seo={seo}>
  <FractalFrontmatter
    {...Astro.props.frontmatter}
    headings={Astro.props.headings}
  />
  <slot />
</Layout>
